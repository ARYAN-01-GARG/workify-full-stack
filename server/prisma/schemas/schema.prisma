generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CANDIDATE
  ADMIN
  RECRUITTER
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String
  password     String
  isVerified   Boolean  @default(false)
  profileImage String?
  version      Int      @default(1)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  role         Role     @default(CANDIDATE)

  posts Post[]
  recruiter Recruiter?
  candidate Candidate?
}

model Otp {
  id        String   @id @default(cuid())
  email     String
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([expiresAt])
}

model Post {
  id          String   @id @default(cuid())
  title       String
  description String
  image       String
  location    String
  remote      Boolean
  company     String
  skills      String[]
  offer       String
  duration    String
  experience  Int
  startDate   String
  userId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relation of Post with user
  user User @relation(fields: [userId], references: [id])
  @@index([createdAt])
}

model Recruiter {
  id             String   @id @default(cuid())
  userId         String   @unique
  companyName    String
  jobTitle       String?
  jobDescription String?
  jobLocation    String?
  companyEmail   String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relation of Recruiter with user
  user User @relation(fields: [userId], references: [id])
}

model Candidate {
  id         String   @id @default(cuid())
  userId     String   @unique
  resume     String?
  bio        String?
  skills     String[]
  experience Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
